<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/vadimsva/waitMe/waitMe.min.css"/>
<script src="https://cdn.jsdelivr.net/gh/vadimsva/waitMe/waitMe.min.js"></script>

<div id="import_products"
     data-url-import-split="<?php echo Mage::helper("adminhtml")->getUrl("thespaceimportexport/import/ajaximportsplit"); ?>?isAjax=true&form_key=<?php echo Mage::getSingleton('core/session')->getFormKey() ?>"
     data-url-import-parse="<?php echo Mage::helper("adminhtml")->getUrl("thespaceimportexport/import/ajaximportparse"); ?>?isAjax=true&form_key=<?php echo Mage::getSingleton('core/session')->getFormKey() ?>"
     data-url-import-check="<?php echo Mage::helper("adminhtml")->getUrl("thespaceimportexport/import/ajaximportcheck"); ?>?isAjax=true&form_key=<?php echo Mage::getSingleton('core/session')->getFormKey() ?>"
     data-url-import-run="<?php echo Mage::helper("adminhtml")->getUrl("thespaceimportexport/import/ajaximportrun"); ?>?isAjax=true&form_key=<?php echo Mage::getSingleton('core/session')->getFormKey() ?>"
     data-url-import-showimportjson="<?php echo Mage::helper("adminhtml")->getUrl("thespaceimportexport/import/showimportjson"); ?>?form_key=<?php echo Mage::getSingleton('core/session')->getFormKey() ?>&file={file}"
     data-form-key="<?php echo Mage::getSingleton('core/session')->getFormKey() ?>"
>
    <h2>Caricamento prodotti</h2>
    <form id="import_form_product_upload" method="post" enctype="multipart/form-data">
        <input name="form_key" type="hidden" value="<?php echo Mage::getSingleton('core/session')->getFormKey() ?>"/>

        <label>
            Import
            <input type="file" name="file">
        </label>

        <input type="submit" value="Carica file">

        <div class="import_form_product_upload_info" style="display:none;">
            <p>
                Numero di righe: <span id="import_form_product_import_rows_count">Seleziona file...</span>
            </p>
        </div>
    </form>
    <p></p>

    <form id="import_form_product_import" method="post" style="display: none;">
        <input name="form_key" type="hidden" value="<?php echo Mage::getSingleton('core/session')->getFormKey() ?>"/>
        <input id="import_form_product_import_file" name="file" type="hidden" value=""/>

        <p>
            <label> Righe per volta <input id="step_rows" type="text" value="50" name="step_rows"></label>
        </p>

        <p>
            <label> Sostituzione immagini <input id="image_replace" type="checkbox" value="1"
                                                 name="image_replace"></label>
        </p>
        <p>
            <label> Sostituzione categorie <input id="category_replace" type="checkbox" value="1"
                                                  name="category_replace"></label>
        </p>
        <!--        <p>-->
        <!--            <label> Gestione avanzata immagini <input type="checkbox" value="1" name="image_advanced"></label>-->
        <!--        </p>-->
        <!--        <p>-->
        <!--            <label> Sostituzione immagini <input type="checkbox" value="1" name="image_replace"></label>-->
        <!--        </p>-->
        <p id="progress_status">

        </p>

        <button type="submit">Importa</button>
    </form>
    <p></p>

    <table id="import_table_product_errors" style="display: none;"
           data-template-row="<tr><td>{row}</td></tr>">
        <thead>
        <tr>
            <th>Errori</th>
        </tr>
        </thead>
        <tbody>
        </tbody>
    </table>

</div>

<style>

    table {
        border-collapse: collapse;
    }

    table, th, td {
        border: 1px solid black;
    }

    #import_table_product_errors {
        width: 100%;
        max-height: 400px;
        border: none;
        display: block;
        overflow: scroll;
        border-collapse: collapse;
    }

    #import_table_product_errors th,
    #import_table_product_errors td {
        border: 1px solid grey;
        padding: 5px;
    }
</style>

<script>

    $j = jQuery.noConflict();

    $j(function () {

        var globals = $j("#import_products").data();

        $j("#import_form_product_upload").on("submit", function (e) {

            var formData = new FormData(this);

            loading('Caricamento file');

            parseImport(formData, {
                onComplete: function (response) {

                    endLoading();

                    // loading('Verifica del file');
                    $j("#import_form_product_import_file").val(response.file);
                    $j("#import_form_product_import_rows_count").html(response.rows_count);
                    $j("#import_form_product_upload_info").fadeIn(0);

                    // checkImport({
                    //     file: response.file
                    // }, {
                    //     onComplete: function (response) {
                    //         endLoading();

                    if (response.status === 'OK') {

                        $j("#import_form_product_import").fadeIn(0);
                    } else {

                        // Mostro errori file

                        $j.each(response.errors, function (index, error) {
                            printError(error);
                        });
                    }
                    // },
                    // onError: function (response) {
                    //     alert(JSON.stringify(response));
                    // }
                    // });
                },
                onError: function (response) {
                    alert(JSON.stringify(response));
                }
            });

            e.preventDefault();
        });

        var importProductsForm = $j("#import_form_product_import");

        importProductsForm.on("submit", function (e) {

            var formData = new FormData(this);
            loading('');

            splitImport(formData, {
                onComplete: function (response) {
                    if (response.status === 'OK') {
                        var groupFiles = response.files;

                        importGroups(groupFiles, 0, {
                            imageReplace: $j("#image_replace").is(":checked") ? 1 : 0,
                            categoryReplace: $j("#category_replace").is(":checked") ? 1 : 0,
                            onProcess: function (response, index) {

                                $j.each(response.errors, function (k, error) {

                                    var errorMessage = '<a href="{url}" target="_blank">{index}</a> {error}';
                                    var url = globals.urlImportShowimportjson;
                                    url = url.replace(/{file}/g, response.file);

                                    errorMessage = errorMessage.replace(/{url}/g, url);
                                    errorMessage = errorMessage.replace(/{index}/g, index + 1);
                                    errorMessage = errorMessage.replace(/{error}/g, JSON.stringify(error));


                                    printError(errorMessage);
                                });

                                var progress = 'Import in corso: {step} / {total}';
                                progress = progress.replace(/{step}/g, index + 1);
                                progress = progress.replace(/{total}/g, groupFiles.length);
                                // $j("#progress_status").html(progress);
                                loading(progress);
                            },
                            onComplete: function () {
                                console.log('Complete');
                                setTimeout(function () {
                                    endLoading();
                                }, 500);
                            }
                        });
                    }
                },
                onError: function (response) {
                    alert(JSON.stringify(response));
                }
            });

            e.preventDefault();
        });

        function loading(text) {
            $j("body").waitMe({
                bg: 'rgba(0, 0, 0, 0.6)',
                text: text,
                color: '#ecf0f1'
            });
        }

        function endLoading() {
            $j("body").waitMe('hide');
        }

        function importGroups(groups, index, options) {

            if (index < groups.length) {

                var group = groups[index];

                $j.ajax({
                    url: globals.urlImportRun,
                    method: 'post',
                    data: {
                        file: group,
                        group: index,
                        category_replace: options.categoryReplace
                    },
                    // processData: false,
                    // cache: false,
                    // contentType: false,
                    success: function (response) {
                        console.log(response);
                        options.onProcess(response, index);
                        importGroups(groups, index + 1, options);
                    }
                });
            } else {

                options.onComplete();
            }

        }

        function parseImport(data, options) {

            options = {
                ...{
                    onComplete: function (response) {

                    },
                    onError: function (response) {

                    }
                }, ...options
            };


            $j.ajax({
                url: globals.urlImportParse,
                method: 'post',
                data: data,
                processData: false,
                cache: false,
                contentType: false,
                success: function (response) {
                    options.onComplete(response);
                },
                error: function (response) {
                    options.onError(response);
                }

            });
        }

        /**
         * Split files
         * @param data
         * @param options
         */
        function splitImport(data, options) {

            options = {
                ...{
                    onComplete: function (response) {

                    },
                    onError: function (response) {

                    }
                }, ...options
            };

            $j.ajax({
                url: globals.urlImportSplit,
                method: 'post',
                data: data,
                processData: false,
                cache: false,
                contentType: false,
                success: function (response) {
                    options.onComplete(response);
                },
                error: function (response) {
                    options.onError(response);
                }
            });
        }

        /**
         * Split files
         * @param data
         * @param options
         */
        function checkImport(data, options) {

            options = {
                ...{
                    onComplete: function (response) {

                    },
                    onError: function (response) {

                    }
                }, ...options
            };

            console.log(data);

            $j.ajax({
                url: globals.urlImportCheck,
                method: 'post',
                data: data,
                success: function (response) {
                    options.onComplete(response);
                },
                error: function (response) {
                    options.onError(response);
                }
            });
        }

        function printError(errorText) {
            var errorsTable = $j("#import_table_product_errors");
            errorsTable.fadeIn(0);

            var row = errorsTable.data('template-row');
            row = row.replace(/{row}/g, errorText);
            errorsTable.find("tbody").prepend(row);
        }

        //$j("#import_form_product_import").on("submit", function (e) {
        //
        //    var formData = new FormData(this);
        //
        //    $j.ajax({
        //        url: '<?php //echo Mage::helper("adminhtml")->getUrl("thespaceimportexport/import/ajaximportcheck"); ?>//',
        //        method: 'post',
        //        data: formData,
        //        processData: false,
        //        cache: false,
        //        contentType: false,
        //        success: function (response) {
        //
        //            var errorTable = $j("#import_table_product_errors");
        //            errorTable.find("tbody").html('');
        //            errorTable.fadeIn(0);
        //
        //            if (response.errors.length) {
        //                var rowTemplate = errorTable.data('template-row');
        //                var rowsData = "";
        //
        //                for (var i = 0; i < response.errors.length; i++) {
        //                    var error = response.errors[i];
        //                    var rowItem = rowTemplate;
        //                    rowItem = rowItem.replace(/{row}/g, error.row);
        //                    rowItem = rowItem.replace(/{columns}/g, error.columns);
        //                    rowsData += rowItem;
        //                }
        //                errorTable.find("tbody").html(rowsData);
        //            } else {
        //
        //                $j.ajax({
        //                    url: '<?php //echo Mage::helper("adminhtml")->getUrl("thespaceimportexport/import/ajaximportrun"); ?>//',
        //                    method: 'post',
        //                    data: formData,
        //                    processData: false,
        //                    cache: false,
        //                    contentType: false,
        //                    success: function (response) {
        //                        console.log(response);
        //                    },
        //                    error: function (response) {
        //
        //                    }
        //                });
        //            }
        //        },
        //        error: function (response) {
        //
        //        }
        //    });
        //
        //    e.preventDefault();
        //});
    });
</script>
